{"version":3,"file":"static/webpack/static\\development\\pages\\formBuilder.js.1d2bcbe9c2dc3c123864.hot-update.js","sources":["webpack:///./pages/formBuilder/index.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n//form elements\r\nimport {\r\n    FormBuilderInput,\r\n    FormBuilderTextArea\r\n} from \"./allElements\";\r\n\r\nclass FormBuilder extends Component {\r\n    state = {\r\n        inputCount: 0,\r\n        formElements: [\r\n            {id: 1, name: \"input\", description: \"this is a input\", value: \"firstName\", type: \"text\", added: true},\r\n            {id: 2, name: \"input\", description: \"this is a input\", value: \"lastName\", type: \"text\", added: false},\r\n            {id: 3, name: \"input\", description: \"this is a input\", value: \"email\", type: \"text\", added: false}\r\n        ]\r\n    }\r\n\r\n    // DRAG AND DROP\r\n    // store the temp data while dragging\r\n    onDragStart = (e, id) => {\r\n        console.clear();\r\n        console.log(\"Dragging:\", id);\r\n        e.dataTransfer.setData(\"id\", id);\r\n    }\r\n    // removes default on element drop\r\n    onDragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    // gets the data that is being dragged\r\n    onDrop = (e, added) => {\r\n        console.log(added)\r\n        let id = e.dataTransfer.getData(\"id\");\r\n        // Update the inputs object with new drop data\r\n        let inputs = this.state.formElements.filter((elem) => {\r\n            \r\n            if(elem.id == id){\r\n                elem.added = added\r\n            }\r\n            return inputs;\r\n        });\r\n    }\r\n\r\n    render(){\r\n        // Declare empty arrays to push information into\r\n        var inputs = {\r\n            true: [],\r\n            false: []\r\n        }\r\n        // Sort the elements based off of added or not to the builder\r\n        this.state.formElements.forEach((elem) => {\r\n            inputs[elem.added].push(\r\n                <div onDragStart={(e) => this.onDragStart(e, elem.id)}\r\n                    draggable key={elem.id} \r\n                    className=\"draggableItem\"\r\n                >{elem.name}</div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div id=\"formBuilder\">\r\n                <div className=\"container\">\r\n                    <div className=\"left\">\r\n                        {inputs.false}\r\n                        <button onClick={this.addInput}>Add Input</button>\r\n                        <button onClick={this.removeInput}>Remove Input</button>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <form className=\"creator\">\r\n                            <div className=\"dragArea\"\r\n                                onDragOver={(e) => this.onDragOver(e)}\r\n                                onDrop={(e)=> this.onDrop(e, true)}>\r\n                                {inputs.true}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FormBuilder;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAXA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AAvEA;AACA;AAwEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}